.pos 0
init:
  irmovl Stack, %esp
	irmovl Stack, %ebp
	call Main
	halt

.align 4
ele1:
  .long 0x00a
  .long ele2
ele2:
  .long 0x0b0
  .long ele3
ele3:
  .long 0xc00
  .long 0

Main:
	pushl %ebp
	rrmovl %esp,%ebp
	irmovl ele1,%edx
	pushl %edx
	call sum_list
	rrmovl %ebp,%esp
	popl %ebp
	ret

sum_list:
	pushl %ebp
	rrmovl %esp,%ebp
	mrmovl 8(%ebp),%edx
	xorl %eax,%eax
Loop:
	andl %edx,%edx
	je End
	mrmovl (%edx),%esi
	addl %esi,%eax
	mrmovl 4(%edx),%esi
	rrmovl %esi,%edx
	jmp Loop
End:
	rrmovl %ebp,%esp
	popl %ebp
	ret

.pos 0x100
Stack:
