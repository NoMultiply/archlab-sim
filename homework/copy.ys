.pos 0
init:
  irmovl Stack, %esp
	irmovl Stack, %ebp
	call Main
	halt

.align 4
src:
  .long 0x00a
  .long 0x0b0
  .long 0xc00
dest:
  .long 0x111
  .long 0x222
  .long 0x333

Main:
	pushl %ebp
	rrmovl %esp,%ebp
  irmovl $3,%eax
  pushl %eax
	irmovl dest,%edx
	pushl %edx
  irmovl src,%edx
	pushl %edx
	call copy_block
	rrmovl %ebp,%esp
	popl %ebp
	ret

copy_block:
	pushl %ebp
	rrmovl %esp,%ebp
	mrmovl 8(%ebp),%esi
  mrmovl 12(%ebp),%edi
  mrmovl 16(%ebp),%ecx
  xorl %ebx,%ebx
Loop:
	andl %ecx,%ecx
	je End
	mrmovl (%esi),%eax
	rmmovl %eax,(%edi)
  xorl %eax,%ebx
  irmovl $4,%eax
	addl %eax,%esi
  addl %eax,%edi
  irmovl $1,%eax
	subl %eax,%ecx
	jmp Loop
End:
  rrmovl %ebx,%eax
	rrmovl %ebp,%esp
	popl %ebp
	ret

.pos 0x100
Stack:
